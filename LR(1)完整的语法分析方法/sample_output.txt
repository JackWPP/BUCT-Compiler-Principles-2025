LR(1)语法分析器示例输出

=== 文法信息 ===
开始符号: E

产生式:
  0: E' -> E
  1: E -> E + T
  2: E -> T
  3: T -> T * F
  4: T -> F
  5: F -> ( E )
  6: F -> id

非终结符: E, E', F, T
终结符: $, (, ), *, +, id

FIRST集合:
  FIRST(E) = {(, id}
  FIRST(E') = {(, id}
  FIRST(F) = {(, id}
  FIRST(T) = {(, id}

FOLLOW集合:
  FOLLOW(E) = {$, ), +}
  FOLLOW(E') = {$}
  FOLLOW(F) = {$, ), *, +}
  FOLLOW(T) = {$, ), *, +}

=== LR(1)分析表 ===
状态  (       )       *       +       id      $       |E       F       T       
---------------------------------------------------------------------------
0     s4              s5                      |1       3       2       
1                             s6              acc     |               
2                     s7      r2      r2      |               
3                     r4      r4      r4      |               
4     s4              s5                      |8       3       2       
5                             r6      r6      |               
6     s4              s5                      |               3       9       
7     s4              s5                      |               10      
8                     s7      s11     s12     |               
9                     r3      r3      r3      |               
10                    r5      r5      r5      |               
11                            r1      r1      |               
12    s13                                     |               

=== 语法分析过程 ===
输入串: id + id * id

分析步骤:
--------------------------------------------------------------------------------
步骤 | 栈                   | 输入            | 动作
--------------------------------------------------------------------------------
 1 | [0]                  | id + id * id $  | 移进到状态5
 2 | [0, 5]               | + id * id $     | 用产生式6归约: F -> id
 3 | [0, 3]               | + id * id $     | 用产生式4归约: T -> F
 4 | [0, 2]               | + id * id $     | 用产生式2归约: E -> T
 5 | [0, 1]               | + id * id $     | 移进到状态6
 6 | [0, 1, 6]            | id * id $       | 移进到状态5
 7 | [0, 1, 6, 5]         | * id $          | 用产生式6归约: F -> id
 8 | [0, 1, 6, 3]         | * id $          | 用产生式4归约: T -> F
 9 | [0, 1, 6, 9]         | * id $          | 移进到状态7
10 | [0, 1, 6, 9, 7]      | id $            | 移进到状态5
11 | [0, 1, 6, 9, 7, 5]   | $               | 用产生式6归约: F -> id
12 | [0, 1, 6, 9, 7, 10]  | $               | 用产生式3归约: T -> T * F
13 | [0, 1, 6, 9]         | $               | 用产生式1归约: E -> E + T
14 | [0, 1]               | $               | 接受

分析结果: ✓ 分析成功
输入串符合文法规则。

=== 自动机状态信息 ===

状态 0:
项目集:
  E' -> • E, $
  E -> • E + T, $
  E -> • E + T, +
  E -> • T, $
  E -> • T, +
  T -> • T * F, $
  T -> • T * F, +
  T -> • T * F, *
  T -> • F, $
  T -> • F, +
  T -> • F, *
  F -> • ( E ), $
  F -> • ( E ), +
  F -> • ( E ), *
  F -> • id, $
  F -> • id, +
  F -> • id, *

转换:
  ( -> 状态4
  id -> 状态5
  E -> 状态1
  T -> 状态2
  F -> 状态3

状态 1:
项目集:
  E' -> E •, $
  E -> E • + T, $
  E -> E • + T, +

转换:
  + -> 状态6

... (其他状态信息)

=== 冲突检测结果 ===
无冲突，文法是LR(1)文法。

=== 总结 ===
• 文法类型: LR(1)
• 状态数量: 13
• 产生式数量: 7
• 分析结果: 成功
• 分析步骤: 14步
